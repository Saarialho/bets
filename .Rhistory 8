pinnacle_odds %>% mutate(closest_date = map(pelit, ~.x %>% mutate(min_date = min(date)) %>% pull(min_date) %>% first()))
pinnacle_odds %>% mutate(closest_date = map_chr(pelit, ~.x %>% mutate(min_date = min(date)) %>% pull(min_date) %>% first()))
pinnacle_odds %>% mutate(closest_date = map(pelit, ~.x %>% mutate(min_date = min(date)) %>% pull(min_date) %>% first()))
pinnacle_odds %>% mutate(closest_date = map(pelit, ~.x %>% mutate(min_date = min(date)) %>% pull(min_date) %>% first())) %>% unnest(closest_date)
pinnacle_odds <- get_pinnacle_odds(league_specs$league.id) %>%
rename(league.id = leagues.id) %>%
group_by(league.id) %>%
nest(pelit = c(-league.id)) %>%
left_join(league_specs) %>%
mutate(closest_date = map(pelit, ~.x %>%
mutate(min_date = min(date)) %>%
pull(min_date) %>%
first())) %>%
unnest(closest_date)
pinnacle_odds
pinnacle_odds <- get_pinnacle_odds(league_specs$league.id) %>%
rename(league.id = leagues.id) %>%
group_by(league.id) %>%
nest(pelit = c(-league.id)) %>%
left_join(league_specs)
pinnacle_odds
buch_leagues
buch_leagues %>%
group_by(league) %>%
summarise(days_since_last = as.double(Sys.Date()-last(date))) %>%
filter(days_since_last < 20) %>%
pull(league)
active_leagues <- buch_leagues %>%
group_by(league) %>%
summarise(days_since_last = as.double(Sys.Date()-last(date))) %>%
filter(days_since_last < 20) %>%
pull(league)
pinnacle_odds
pinnacle_odds %>%
filter(league %in% active_leagues)
pinnacle_odds <- pinnacle_odds %>%
filter(league %in% active_leagues)
main_data
main_data <- join_buch_fbref(buch_data = buch_leagues, fbref_data = fbref_leagues) %>%
select(-contains('date_'), -c(PSCH:FTR)) %>%
filter(league %in% active_leagues)
main_data %>%
select(league, h_xg) %>%
group_by(league) %>%
skimr::skim()
main_data <- main_data %>%
mutate(h_xg = if_else(is.na(h_xg), mhxg, h_xg),
a_xg = if_else(is.na(a_xg), maxg, a_xg))
main_data %>%
select(league, h_xg) %>%
group_by(league) %>%
skimr::skim()
# muutetaan pinnacle nimet
pin_names <- main_data %>%
replace_team_names(home, away, pattern = team_dictionary()$buch_name, replacement = team_dictionary()$pin_name)
fits <- pin_names %>%
group_nest(league) %>%
filter(map_dbl(data, nrow) >= 60) %>% #min amount of games played
unnest(data) %>%
mutate(configs = list(configs %>% select(-penalty))) %>%
unnest(c(configs)) %>%
mutate(hwxg = wmkt*mhxg + wxg*h_xg + wgoals*FTHG,
awxg = wmkt*maxg + wxg*a_xg + wgoals*FTAG) %>%
group_nest(league, model_id, xi) %>%
mutate(fit = map2(data, xi, fit_multimixture_model)) %>%
select(league, model_id, fit) %>%
mutate(teams = map(fit, ~.x %>% pluck('all_teams')))
fits
suppressWarnings(
preds <- fits %>%
left_join(pinnacle_odds) %>%
mutate(pelit = map2(fit, pelit, possibly(predict_1x2, otherwise = NA))) %>%
select(league, model_id, pelit, teams) %>%
unnest(pelit)
)
team_names_map <- preds %>%
filter(is.na(p1)) %>%
select(league, team1, team2, teams) %>%
distinct() %>%
group_nest(league, teams) %>%
mutate(pin_home = map(data, ~ .x %>% pull(team1)),
pin_away = map(data, ~ .x %>% pull(team2)),
pin_teams = map2(pin_home, pin_away, ~c(.x, .y))) %>%
select(league, teams, pin_teams) %>%
unnest(c(teams)) %>%
unnest(c(pin_teams)) %>%
mutate(correct = if_else(pin_teams %in% teams, TRUE, FALSE)) %>%
filter(correct == FALSE) %>%
select(-correct) %>%
group_nest(league, pin_teams) %>%
arrange(league, pin_teams) %>%
group_by(league) %>%
mutate(closest_match = map_chr(pin_teams, function(x) {
teams <- data[[1]]$teams
distances <- adist(x, teams)
teams[which.min(distances)]
})) %>%
ungroup() %>%
select(league, closest_match, pin_teams) %>%
distinct(league, closest_match, .keep_all = TRUE)
team_names_map
main_data %>% filter(str_detect(home, 'santos'))
main_data %>% filter(str_detect(home, 'colon'))
main_data %>% filter(str_detect(home, 'mineir'))
main_data %>% filter(str_detect(home, 'america'))
main_data <- join_buch_fbref(buch_data = buch_leagues, fbref_data = fbref_leagues) %>%
select(-contains('date_'), -c(PSCH:FTR)) %>%
filter(league %in% active_leagues)
main_data %>%
select(league, h_xg) %>%
group_by(league) %>%
skimr::skim()
main_data <- main_data %>%
mutate(h_xg = if_else(is.na(h_xg), mhxg, h_xg),
a_xg = if_else(is.na(a_xg), maxg, a_xg))
load_all()
main_data <- join_buch_fbref(buch_data = buch_leagues, fbref_data = fbref_leagues) %>%
select(-contains('date_'), -c(PSCH:FTR)) %>%
filter(league %in% active_leagues)
main_data %>%
select(league, h_xg) %>%
group_by(league) %>%
skimr::skim()
main_data <- main_data %>%
mutate(h_xg = if_else(is.na(h_xg), mhxg, h_xg),
a_xg = if_else(is.na(a_xg), maxg, a_xg))
main_data %>%
select(league, h_xg) %>%
group_by(league) %>%
skimr::skim()
# muutetaan pinnacle nimet
pin_names <- main_data %>%
replace_team_names(home, away, pattern = team_dictionary()$buch_name, replacement = team_dictionary()$pin_name)
fits <- pin_names %>%
group_nest(league) %>%
filter(map_dbl(data, nrow) >= 60) %>% #min amount of games played
unnest(data) %>%
mutate(configs = list(configs %>% select(-penalty))) %>%
unnest(c(configs)) %>%
mutate(hwxg = wmkt*mhxg + wxg*h_xg + wgoals*FTHG,
awxg = wmkt*maxg + wxg*a_xg + wgoals*FTAG) %>%
group_nest(league, model_id, xi) %>%
mutate(fit = map2(data, xi, fit_multimixture_model)) %>%
select(league, model_id, fit) %>%
mutate(teams = map(fit, ~.x %>% pluck('all_teams')))
fits
suppressWarnings(
preds <- fits %>%
left_join(pinnacle_odds) %>%
mutate(pelit = map2(fit, pelit, possibly(predict_1x2, otherwise = NA))) %>%
select(league, model_id, pelit, teams) %>%
unnest(pelit)
)
team_names_map <- preds %>%
filter(is.na(p1)) %>%
select(league, team1, team2, teams) %>%
distinct() %>%
group_nest(league, teams) %>%
mutate(pin_home = map(data, ~ .x %>% pull(team1)),
pin_away = map(data, ~ .x %>% pull(team2)),
pin_teams = map2(pin_home, pin_away, ~c(.x, .y))) %>%
select(league, teams, pin_teams) %>%
unnest(c(teams)) %>%
unnest(c(pin_teams)) %>%
mutate(correct = if_else(pin_teams %in% teams, TRUE, FALSE)) %>%
filter(correct == FALSE) %>%
select(-correct) %>%
group_nest(league, pin_teams) %>%
arrange(league, pin_teams) %>%
group_by(league) %>%
mutate(closest_match = map_chr(pin_teams, function(x) {
teams <- data[[1]]$teams
distances <- adist(x, teams)
teams[which.min(distances)]
})) %>%
ungroup() %>%
select(league, closest_match, pin_teams) %>%
distinct(league, closest_match, .keep_all = TRUE)
team_names_map
preds
preds %>%
select(-periods.spreads) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
pivot_wider(names_from = model_id, values_from = pred)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
pivot_wider(names_from = model_id, values_from = pred)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred')
lasso_coefs
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate))
intercept <- pull(filter(lasso_coefs, term == '(Intercept)'), estimate)
side_x <- pull(filter(lasso_coefs, term == 'side_X'), estimate)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(league, model_id, date, team1, team2, mlh, mld, mla, maxbet, side, pred) %>%
summarise(man_pred = sum(pred*estimate)+intercept)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(league, model_id, date, team1, team2, mlh, mld, mla, maxbet, side, pred)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(league, model_id, date, team1, team2, mlh, mld, mla, maxbet, side, pred) %>%
summarise(man_pred = sum(pred*estimate)+intercept)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(league, model_id, date, team1, team2, mlh, mld, mla, maxbet, side) %>%
summarise(man_pred = sum(pred*estimate)+intercept)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(date, model_id, side) %>%
summarise(man_pred = sum(pred*estimate)+intercept)
preds %>%
select(-periods.spreads, -teams)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred')
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(date, league, model_id, side)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(date, league, model_id, side) %>%
summarise(man_pred = sum(pred*estimate)+intercept)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(date, league, model_id, side) %>%
summarise(man_pred = sum(pred*estimate)+intercept)
mutate(man_pred = if_else(side == 'pd', man_pred + side_x, man_pred))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
mutate(match = paste0(date, team1, team2))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
mutate(match = paste0(date, team1, team2)) %>%
group_by(date, league, model_id, side, match) %>%
summarise(man_pred = sum(pred*estimate)+intercept)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate))
mutate(match = paste0(date, team1, team2)) %>%
group_by(date, league, side, match) %>%
summarise(man_pred = sum(pred*estimate)+intercept)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
mutate(match = paste0(date, team1, team2)) %>%
group_by(date, league, side, match) %>%
summarise(man_pred = sum(pred*estimate)+intercept)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
mutate(match = paste0(date, team1, team2)) %>%
group_by(date, league, side, match) %>%
summarise(pred = sum(pred*estimate)+intercept) %>%
mutate(pred = if_else(side == 'pd', pred + side_x, pred))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
mutate(match = paste0(date, team1, team2))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
mutate(match = paste0(date, team1, team2)) %>%
group_by(date, league, team1, team2, mlh, mld, mla, maxbet, side) %>%
summarise(pred = sum(pred*estimate)+intercept) %>%
mutate(pred = if_else(side == 'pd', pred + side_x, pred))
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(date, league, team1, team2, mlh, mld, mla, maxbet, side) %>%
summarise(pred = sum(pred*estimate)+intercept) %>%
mutate(pred = if_else(side == 'pd', pred + side_x, pred))
pivot_wider(names_from = side, values_from = pred)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(date, league, team1, team2, mlh, mld, mla, maxbet, side) %>%
summarise(pred = sum(pred*estimate)+intercept) %>%
mutate(pred = if_else(side == 'pd', pred + side_x, pred)) %>%
pivot_wider(names_from = side, values_from = pred)
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(date, league, team1, team2, mlh, mld, mla, maxbet, side) %>%
summarise(pred = sum(pred*estimate)+intercept) %>%
mutate(pred = if_else(side == 'pd', pred + side_x, pred)) %>%
pivot_wider(names_from = side, values_from = pred) %>%
ungroup()
?summarise()
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate)) %>%
group_by(date, league, team1, team2, mlh, mld, mla, maxbet, side) %>%
summarise(pred = sum(pred*estimate)+intercept, .groups = 'keep') %>%
mutate(pred = if_else(side == 'pd', pred + side_x, pred)) %>%
pivot_wider(names_from = side, values_from = pred) %>%
ungroup()
preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate), by = 'model_id') %>%
group_by(date, league, team1, team2, mlh, mld, mla, maxbet, side) %>%
summarise(pred = sum(pred*estimate)+intercept, .groups = 'keep') %>%
mutate(pred = if_else(side == 'pd', pred + side_x, pred)) %>%
pivot_wider(names_from = side, values_from = pred) %>%
ungroup()
multi_predictions <- preds %>%
select(-periods.spreads, -teams) %>%
pivot_longer(cols = p1:p2, names_to = 'side', values_to = 'pred') %>%
left_join(lasso_coefs %>% select(model_id  = term, estimate), by = 'model_id') %>%
group_by(date, league, team1, team2, mlh, mld, mla, maxbet, side) %>%
summarise(pred = sum(pred*estimate)+intercept, .groups = 'keep') %>%
mutate(pred = if_else(side == 'pd', pred + side_x, pred)) %>%
pivot_wider(names_from = side, values_from = pred) %>%
ungroup()
multi_predictions
spreads <- preds %>%
ungroup() %>%
distinct(league, .keep_all = TRUE) %>%
unnest(pelit) %>%
unnest(periods.spreads) %>%
filter(hdp %in% c(0,0.5,-0.5)) %>%
select(date, team1, team2, hdp, home, away)
preds
spreads <- preds %>%
ungroup() %>%
distinct(league, .keep_all = TRUE) %>%
unnest(periods.spreads) %>%
filter(hdp %in% c(0,0.5,-0.5)) %>%
select(date, team1, team2, hdp, home, away)
spreads
arviot <- multi_predictions %>%
left_join(spreads) %>%
mutate(EV1 = p1*mlh-1,
EVD = pd*mld-1,
EV2 = p2*mla-1) %>%
mutate(EV1_hdp = case_when(hdp == 0 ~ p1/(1-pd)*home-1,
hdp == -0.5 ~ p1*home-1,
hdp == 0.5 ~ (p1+pd)*home-1),
EV2_hdp = case_when(hdp == 0 ~ p2/(1-pd)*away-1,
hdp == -0.5 ~ (p2+pd)*away-1,
hdp == 0.5 ~ p2*away-1)) %>%
group_by(team1,date) %>%
mutate(max_hdp = pmax(EV1_hdp, EV2_hdp)) %>%
filter((max_hdp == max(max_hdp)) %>% replace_na(TRUE)) %>%
mutate(EV = pmax(EV1,EVD,EV2,EV1_hdp,EV2_hdp, na.rm = TRUE),
kerroin = case_when(EV == EV1 ~ mlh,
EV == EVD ~ mld,
EV == EV2 ~ mla,
EV == EV1_hdp ~ home,
EV == EV2_hdp ~ away),
kohde = factor(case_when(EV == EV1 | EV == EV1_hdp ~ 1,
EV == EVD ~ 2,
TRUE ~ 3)),
dts = as.numeric(date-Sys.Date()),
id = paste(date, team1, team2, sep = "-")) %>%
ungroup %>%
mutate_if(is.numeric, round, 3)
arviot <- multi_predictions %>%
left_join(spreads, by = join_by(date, team1, team2)) %>%
mutate(EV1 = p1*mlh-1,
EVD = pd*mld-1,
EV2 = p2*mla-1) %>%
mutate(EV1_hdp = case_when(hdp == 0 ~ p1/(1-pd)*home-1,
hdp == -0.5 ~ p1*home-1,
hdp == 0.5 ~ (p1+pd)*home-1),
EV2_hdp = case_when(hdp == 0 ~ p2/(1-pd)*away-1,
hdp == -0.5 ~ (p2+pd)*away-1,
hdp == 0.5 ~ p2*away-1)) %>%
group_by(team1,date) %>%
mutate(max_hdp = pmax(EV1_hdp, EV2_hdp)) %>%
filter((max_hdp == max(max_hdp)) %>% replace_na(TRUE)) %>%
mutate(EV = pmax(EV1,EVD,EV2,EV1_hdp,EV2_hdp, na.rm = TRUE),
kerroin = case_when(EV == EV1 ~ mlh,
EV == EVD ~ mld,
EV == EV2 ~ mla,
EV == EV1_hdp ~ home,
EV == EV2_hdp ~ away),
kohde = factor(case_when(EV == EV1 | EV == EV1_hdp ~ 1,
EV == EVD ~ 2,
TRUE ~ 3)),
dts = as.numeric(date-Sys.Date()),
id = paste(date, team1, team2, sep = "-")) %>%
ungroup %>%
mutate_if(is.numeric, round, 3)
arviot
multi_predictions %>%
left_join(spreads, by = join_by(date, team1, team2))
arviot
arviot %>% filter(is.na(p1))
arviot
bets::hist_arviot
arviot
arviot %>%
filter(EV > 0.1, dts >= 2)
View(arviot)
arviot %>%
filter(EV > 0.05, dts >= 2)
arviot %>%
filter(EV > 0.05, dts >= 2) %>%
filter(!(id %in% bets::hist_bets$id))
arviot %>%
filter(EV > 0.05, dts >= 2) %>%
filter(!(id %in% bets::hist_bets$id)) %>%
mutate(bet = bets::kelly_bet(EV, kerroin, maxbet))
load_all()
betit <- arviot %>%
filter(EV > 0.05, dts >= 2) %>%
filter(!(id %in% bets::hist_bets$id)) %>%
mutate(bet = bets::kelly_bet(EV, kerroin, maxbet)) %>%
mutate(across(where(is.numeric), ~ round(., 3)))
arviot %>%
filter(EV > 0.05, dts >= 2) %>%
filter(!(id %in% bets::hist_bets$id)) %>%
mutate(bet = bets::kelly_bet(EV, kerroin, maxbet))
betit <- arviot %>%
filter(EV > 0.05, dts >= 2) %>%
filter(!(id %in% bets::hist_bets$id)) %>%
mutate(bet = pmap_dbl(list(EV, kerroin, maxbet), bets::kelly_bet)) %>%
mutate(across(where(is.numeric), ~ round(., 3)))
load_all()
betit <- arviot %>%
filter(EV > 0.05, dts >= 2) %>%
filter(!(id %in% bets::hist_bets$id)) %>%
mutate(bet = pmap_dbl(list(EV, kerroin, maxbet), bets::kelly_bet)) %>%
mutate(across(where(is.numeric), ~ round(., 3)))
betit
if(nrow(betit) > 0){
betit %>%
arrange(desc(league)) %>%
select(date:p2, EV1:EV2_hdp, hdp, kerroin, bet) %>% View
}
bets::hist_bets
bets::hist_bets %>%
bind_rows(betit %>%
#laita # merkki eteen jos extra liiga data tullut
#filter(!str_detect(league, 'Liga|MLS|Serie')) %>%
mutate(kohde = as.numeric(kohde)))
hist_bets <- bets::hist_bets %>%
bind_rows(betit %>%
#laita # merkki eteen jos extra liiga data tullut
#filter(!str_detect(league, 'Liga|MLS|Serie')) %>%
mutate(kohde = as.numeric(kohde)))
use_data(hist_bets, overwrite = TRUE)
bets::hist_arviot %>%
bind_rows(arviot %>%
filter(!(id %in% hist_arviot$id), dts > 1) %>%
#laita # merkki eteen jos extra liiga data tullut
#filter(!str_detect(league, 'Liga|MLS|Serie')) %>%
mutate(kohde = as.numeric(kohde)))
hist_arviot <- bets::hist_arviot %>%
bind_rows(arviot %>%
filter(!(id %in% hist_arviot$id), dts > 1) %>%
#laita # merkki eteen jos extra liiga data tullut
#filter(!str_detect(league, 'Liga|MLS|Serie')) %>%
mutate(kohde = as.numeric(kohde)))
use_data(hist_arviot, overwrite = TRUE)
